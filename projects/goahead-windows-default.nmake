#
#   goahead-windows-default.nmake -- Makefile to build Embedthis GoAhead for windows
#

PRODUCT         = goahead
VERSION         = 3.1.0
BUILD_NUMBER    = 1
PROFILE         = default
PA              = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH            = x64
ENTRY           = _DllMainCRTStartup
!ELSE
ARCH            = x86
ENTRY           = _DllMainCRTStartup@12
!ENDIF

OS              = windows
CONFIG          = $(OS)-$(ARCH)-$(PROFILE)
LBIN            = $(CONFIG)\bin
CC              = cl
LD              = link
RC              = rc
CFLAGS          = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS          = -D_REENTRANT -D_MT -DBIT_DEBUG
IFLAGS          = -I$(CONFIG)\inc
LDFLAGS         = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS        = -libpath:$(CONFIG)\bin
LIBS            = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX       = C:
BIT_BASE_PREFIX       = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX        = $(BIT_BASE_PREFIX)\Embedthis GoAhead
BIT_VAPP_PREFIX       = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX       = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX      = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX        = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX        = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX        = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX        = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX        = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX        = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX        = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX      = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX      = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX        = $(BIT_VAPP_PREFIX)\src

all compile: prep \
        $(CONFIG)\bin\removeFiles.exe \
        $(CONFIG)\bin\libest.dll \
        $(CONFIG)\bin\ca.crt \
        $(CONFIG)\bin\libgo.dll \
        $(CONFIG)\bin\goahead.exe \
        $(CONFIG)\bin\goahead-test.exe \
        $(CONFIG)\bin\gopass.exe

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\goahead-windows-default-bit.h $(CONFIG)\inc\bit.h

clean:
	-if exist $(CONFIG)\bin\removeFiles.exe del /Q $(CONFIG)\bin\removeFiles.exe
	-if exist $(CONFIG)\bin\libest.dll del /Q $(CONFIG)\bin\libest.dll
	-if exist $(CONFIG)\bin\ca.crt del /Q $(CONFIG)\bin\ca.crt
	-if exist $(CONFIG)\bin\libgo.dll del /Q $(CONFIG)\bin\libgo.dll
	-if exist $(CONFIG)\bin\goahead.exe del /Q $(CONFIG)\bin\goahead.exe
	-if exist $(CONFIG)\bin\goahead-test.exe del /Q $(CONFIG)\bin\goahead-test.exe
	-if exist $(CONFIG)\bin\gopass.exe del /Q $(CONFIG)\bin\gopass.exe
	-if exist $(CONFIG)\obj\removeFiles.obj del /Q $(CONFIG)\obj\removeFiles.obj
	-if exist $(CONFIG)\obj\estLib.obj del /Q $(CONFIG)\obj\estLib.obj
	-if exist $(CONFIG)\obj\action.obj del /Q $(CONFIG)\obj\action.obj
	-if exist $(CONFIG)\obj\alloc.obj del /Q $(CONFIG)\obj\alloc.obj
	-if exist $(CONFIG)\obj\auth.obj del /Q $(CONFIG)\obj\auth.obj
	-if exist $(CONFIG)\obj\cgi.obj del /Q $(CONFIG)\obj\cgi.obj
	-if exist $(CONFIG)\obj\crypt.obj del /Q $(CONFIG)\obj\crypt.obj
	-if exist $(CONFIG)\obj\file.obj del /Q $(CONFIG)\obj\file.obj
	-if exist $(CONFIG)\obj\fs.obj del /Q $(CONFIG)\obj\fs.obj
	-if exist $(CONFIG)\obj\goahead.obj del /Q $(CONFIG)\obj\goahead.obj
	-if exist $(CONFIG)\obj\http.obj del /Q $(CONFIG)\obj\http.obj
	-if exist $(CONFIG)\obj\js.obj del /Q $(CONFIG)\obj\js.obj
	-if exist $(CONFIG)\obj\jst.obj del /Q $(CONFIG)\obj\jst.obj
	-if exist $(CONFIG)\obj\options.obj del /Q $(CONFIG)\obj\options.obj
	-if exist $(CONFIG)\obj\osdep.obj del /Q $(CONFIG)\obj\osdep.obj
	-if exist $(CONFIG)\obj\rom-documents.obj del /Q $(CONFIG)\obj\rom-documents.obj
	-if exist $(CONFIG)\obj\route.obj del /Q $(CONFIG)\obj\route.obj
	-if exist $(CONFIG)\obj\runtime.obj del /Q $(CONFIG)\obj\runtime.obj
	-if exist $(CONFIG)\obj\socket.obj del /Q $(CONFIG)\obj\socket.obj
	-if exist $(CONFIG)\obj\upload.obj del /Q $(CONFIG)\obj\upload.obj
	-if exist $(CONFIG)\obj\est.obj del /Q $(CONFIG)\obj\est.obj
	-if exist $(CONFIG)\obj\matrixssl.obj del /Q $(CONFIG)\obj\matrixssl.obj
	-if exist $(CONFIG)\obj\openssl.obj del /Q $(CONFIG)\obj\openssl.obj
	-if exist $(CONFIG)\obj\test.obj del /Q $(CONFIG)\obj\test.obj
	-if exist $(CONFIG)\obj\gopass.obj del /Q $(CONFIG)\obj\gopass.obj

$(CONFIG)\inc\bit.h: 

$(CONFIG)\obj\removeFiles.obj: \
    package\windows\removeFiles.c\
    $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) package\windows\removeFiles.c

$(CONFIG)\bin\removeFiles.exe: \
    $(CONFIG)\obj\removeFiles.obj
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\removeFiles.obj $(LIBS)

$(CONFIG)\inc\est.h: 
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\deps\est\est.h" "$(CONFIG)\inc\est.h"

$(CONFIG)\inc\bitos.h: \
    $(CONFIG)\inc\bit.h
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\bitos.h" "$(CONFIG)\inc\bitos.h"

$(CONFIG)\obj\estLib.obj: \
    src\deps\est\estLib.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h \
    $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\estLib.obj -Fd$(CONFIG)\obj\estLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\est\estLib.c

$(CONFIG)\bin\libest.dll: \
    $(CONFIG)\inc\est.h \
    $(CONFIG)\obj\estLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\estLib.obj $(LIBS)

$(CONFIG)\bin\ca.crt: \
    src\deps\est\ca.crt
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y "src\deps\est\ca.crt" "$(CONFIG)\bin\ca.crt"

$(CONFIG)\inc\goahead.h: 
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\goahead.h" "$(CONFIG)\inc\goahead.h"

$(CONFIG)\inc\js.h: 
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\js.h" "$(CONFIG)\inc\js.h"

$(CONFIG)\obj\action.obj: \
    src\action.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\action.obj -Fd$(CONFIG)\obj\action.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\action.c

$(CONFIG)\obj\alloc.obj: \
    src\alloc.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\alloc.obj -Fd$(CONFIG)\obj\alloc.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\alloc.c

$(CONFIG)\obj\auth.obj: \
    src\auth.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\auth.obj -Fd$(CONFIG)\obj\auth.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\auth.c

$(CONFIG)\obj\cgi.obj: \
    src\cgi.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\cgi.obj -Fd$(CONFIG)\obj\cgi.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\cgi.c

$(CONFIG)\obj\crypt.obj: \
    src\crypt.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\crypt.obj -Fd$(CONFIG)\obj\crypt.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\crypt.c

$(CONFIG)\obj\file.obj: \
    src\file.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\file.obj -Fd$(CONFIG)\obj\file.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\file.c

$(CONFIG)\obj\fs.obj: \
    src\fs.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\fs.obj -Fd$(CONFIG)\obj\fs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\fs.c

$(CONFIG)\obj\goahead.obj: \
    src\goahead.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\goahead.obj -Fd$(CONFIG)\obj\goahead.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\goahead.c

$(CONFIG)\obj\http.obj: \
    src\http.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\http.c

$(CONFIG)\obj\js.obj: \
    src\js.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\js.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\js.obj -Fd$(CONFIG)\obj\js.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\js.c

$(CONFIG)\obj\jst.obj: \
    src\jst.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\js.h
	"$(CC)" -c -Fo$(CONFIG)\obj\jst.obj -Fd$(CONFIG)\obj\jst.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\jst.c

$(CONFIG)\obj\options.obj: \
    src\options.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\options.obj -Fd$(CONFIG)\obj\options.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\options.c

$(CONFIG)\obj\osdep.obj: \
    src\osdep.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\osdep.obj -Fd$(CONFIG)\obj\osdep.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\osdep.c

$(CONFIG)\obj\rom-documents.obj: \
    src\rom-documents.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\rom-documents.obj -Fd$(CONFIG)\obj\rom-documents.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\rom-documents.c

$(CONFIG)\obj\route.obj: \
    src\route.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\route.obj -Fd$(CONFIG)\obj\route.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\route.c

$(CONFIG)\obj\runtime.obj: \
    src\runtime.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\runtime.obj -Fd$(CONFIG)\obj\runtime.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\runtime.c

$(CONFIG)\obj\socket.obj: \
    src\socket.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\socket.obj -Fd$(CONFIG)\obj\socket.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\socket.c

$(CONFIG)\obj\upload.obj: \
    src\upload.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\upload.obj -Fd$(CONFIG)\obj\upload.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\upload.c

src\deps\est\est.h: 

$(CONFIG)\obj\est.obj: \
    src\ssl\est.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h \
    src\deps\est\est.h \
    $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\est.obj -Fd$(CONFIG)\obj\est.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\ssl\est.c

$(CONFIG)\obj\matrixssl.obj: \
    src\ssl\matrixssl.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\matrixssl.obj -Fd$(CONFIG)\obj\matrixssl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\ssl\matrixssl.c

$(CONFIG)\obj\openssl.obj: \
    src\ssl\openssl.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\openssl.obj -Fd$(CONFIG)\obj\openssl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -Isrc\deps\est src\ssl\openssl.c

$(CONFIG)\bin\libgo.dll: \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\js.h \
    $(CONFIG)\obj\action.obj \
    $(CONFIG)\obj\alloc.obj \
    $(CONFIG)\obj\auth.obj \
    $(CONFIG)\obj\cgi.obj \
    $(CONFIG)\obj\crypt.obj \
    $(CONFIG)\obj\file.obj \
    $(CONFIG)\obj\fs.obj \
    $(CONFIG)\obj\goahead.obj \
    $(CONFIG)\obj\http.obj \
    $(CONFIG)\obj\js.obj \
    $(CONFIG)\obj\jst.obj \
    $(CONFIG)\obj\options.obj \
    $(CONFIG)\obj\osdep.obj \
    $(CONFIG)\obj\rom-documents.obj \
    $(CONFIG)\obj\route.obj \
    $(CONFIG)\obj\runtime.obj \
    $(CONFIG)\obj\socket.obj \
    $(CONFIG)\obj\upload.obj \
    $(CONFIG)\obj\est.obj \
    $(CONFIG)\obj\matrixssl.obj \
    $(CONFIG)\obj\openssl.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libgo.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\action.obj $(CONFIG)\obj\alloc.obj $(CONFIG)\obj\auth.obj $(CONFIG)\obj\cgi.obj $(CONFIG)\obj\crypt.obj $(CONFIG)\obj\file.obj $(CONFIG)\obj\fs.obj $(CONFIG)\obj\goahead.obj $(CONFIG)\obj\http.obj $(CONFIG)\obj\js.obj $(CONFIG)\obj\jst.obj $(CONFIG)\obj\options.obj $(CONFIG)\obj\osdep.obj $(CONFIG)\obj\rom-documents.obj $(CONFIG)\obj\route.obj $(CONFIG)\obj\runtime.obj $(CONFIG)\obj\socket.obj $(CONFIG)\obj\upload.obj $(CONFIG)\obj\est.obj $(CONFIG)\obj\matrixssl.obj $(CONFIG)\obj\openssl.obj $(LIBS) libest.lib

$(CONFIG)\bin\goahead.exe: \
    $(CONFIG)\bin\libgo.dll \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\js.h \
    $(CONFIG)\obj\goahead.obj
	"$(LD)" -out:$(CONFIG)\bin\goahead.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\goahead.obj libgo.lib $(LIBS) libest.lib

$(CONFIG)\obj\test.obj: \
    test\test.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\js.h \
    $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\test.obj -Fd$(CONFIG)\obj\test.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\test.c

$(CONFIG)\bin\goahead-test.exe: \
    $(CONFIG)\bin\libgo.dll \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\js.h \
    $(CONFIG)\obj\test.obj
	"$(LD)" -out:$(CONFIG)\bin\goahead-test.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\test.obj libgo.lib $(LIBS) libest.lib

$(CONFIG)\obj\gopass.obj: \
    src\utils\gopass.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\gopass.obj -Fd$(CONFIG)\obj\gopass.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\gopass.c

$(CONFIG)\bin\gopass.exe: \
    $(CONFIG)\bin\libgo.dll \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\goahead.h \
    $(CONFIG)\inc\js.h \
    $(CONFIG)\obj\gopass.obj
	"$(LD)" -out:$(CONFIG)\bin\gopass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\gopass.obj libgo.lib $(LIBS) libest.lib

version: 
	@echo 3.1.0-1

stop: 


installBinary: stop
	if not exist "C:/" md "C:/"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	if not exist "$(BIT_VAPP_PREFIX)\man" md "$(BIT_VAPP_PREFIX)\man"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\goahead.exe" "$(BIT_VAPP_PREFIX)\bin\goahead.exe"
	copy /Y "$(CONFIG)\bin\ca.crt" "$(BIT_VAPP_PREFIX)\bin\ca.crt"
	copy /Y "$(CONFIG)\bin\libest.dll" "$(BIT_VAPP_PREFIX)\bin\libest.dll"
	copy /Y "$(CONFIG)\bin\libgo.dll" "$(BIT_VAPP_PREFIX)\bin\libgo.dll"
	if not exist "$(BIT_VAPP_PREFIX)\web\web\bench" md "$(BIT_VAPP_PREFIX)\web\web\bench"
	copy /Y "src\web\bench\1b.html" "$(BIT_VAPP_PREFIX)\web\web\bench\1b.html"
	copy /Y "src\web\bench\4k.html" "$(BIT_VAPP_PREFIX)\web\web\bench\4k.html"
	copy /Y "src\web\bench\64k.html" "$(BIT_VAPP_PREFIX)\web\web\bench\64k.html"
	if not exist "$(BIT_VAPP_PREFIX)\web\web" md "$(BIT_VAPP_PREFIX)\web\web"
	copy /Y "src\web\index.html" "$(BIT_VAPP_PREFIX)\web\web\index.html"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	copy /Y "src\auth.txt" "$(BIT_VAPP_PREFIX)\auth.txt"
	copy /Y "src\route.txt" "$(BIT_VAPP_PREFIX)\route.txt"


start: 


install: stop installBinary start


uninstall: stop
	if exist "$(BIT_VAPP_PREFIX)" rd /Q /S"$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\bin" rd /Q "$(BIT_VAPP_PREFIX)\bin"
	if exist "$(BIT_VAPP_PREFIX)\man" rd /Q "$(BIT_VAPP_PREFIX)\man"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q "$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\web" rd /Q "$(BIT_VAPP_PREFIX)\web"
	if exist "$(BIT_VAPP_PREFIX)\latest" rd /Q "$(BIT_VAPP_PREFIX)\latest"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q "$(BIT_VAPP_PREFIX)"


