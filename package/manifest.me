/*
    manifest.me - MakeMe manifest for GoAhead
 */

Me.load({
    /*
        Package manifest instructions
        The sets used are: binary, doc, dev, package, source
     */
    manifest: {
        home: me.dir.bin,
        packages:   {
            install: {
                inherit:    'package-manifest',
                prefixes:   [ 'root', 'app', 'vapp', 'bin', 'man', 'web', 'etc'],
                sets:       [ 'core', 'libs', 'doc' ],
                platforms:  [ 'unix', 'windows' ]
            },
            binary: {
                inherit:    'package-manifest',
                prefixes:   [ 'root', 'app', 'vapp', 'bin', 'man', 'web', 'etc'],
                formats:    [ 'native', 'tar' ],
                sets:       [ 'core', 'libs', 'doc', 'package' ],
                platforms:  [ 'freebsd', 'linux', 'macosx', 'windows' ]
            },
            source: {
                inherit:    'package-manifest',
                prefixes:   [ 'root', 'src' ],
                formats:    [ 'tar' ],
                sets:       [ 'source' ],
            },
        },

        sets: { 
            core: [
                {   
                    from:       'goahead${EXE}',
                    to:         '${abin}/',
                    symlink:    '${bin}',

                }, { 
                    from:       '${SRC}/src/paks/est/ca.crt',
                    to:         '${abin}/',

                }, { 
                    from: [ 
                                '${SRC}/src/web/index.html', 
                                '${SRC}/src/web/favicon.ico' 
                    ],
                    to:     '${web}/',
                    exclude: /mgmt|bench|test/,

                }, { 
                    from: [
                                '${SRC}/src/auth.txt', 
                                '${SRC}/src/route.txt', 
                                '${SRC}/src/self.crt', 
                                '${SRC}/src/self.key'
                    ],
                    to:         '${etc}/'
                }
            ],
            libs: [
                { 
                    from:       'libgo${SHOBJ}',
                    to:         '${abin}/',
                    enable:     '!me.settings.static',

                }, { 
                    from:       'libest${SHOBJ}',
                    to:         '${abin}/',
                    components: 'est',
                    enable:     '!me.settings.static',
                    ifdef:      'est',

                }, { 
                    from: [
                                'libssl*${SHOBJ}*',
                                'libcrypto*${SHOBJ}*',
                    ],
                    to:         '${abin}/',
                    enable:     'me.platform.os != "windows"',
                    ifdef:      'openssl',

                }, { 
                    from: [
                                'libeay32${SHOBJ}',
                                'ssleay32${SHOBJ}',
                    ],
                    to:         '${abin}/',
                    enable:     'me.platform.os == "windows"',
                    ifdef:      'openssl',
                }
            ],
            doc: [
                { 
                    from:       '${SRC}/doc/public/man/*.1',
                    to:         '${adoc}/man/man1/',
                    symlink:    '${man}/man1',
                    enable:     "me.platform.like == 'unix'",
                }
            ],
            source: [
                {
                    from:       '${SRC}/*.md',
                    to:         '${src}/',
                    fold:       true,
                    patch:      true,

                }, { 
                    from:       '${SRC}/configure',
                    to:         '${src}/',
                    permissions: 0755,     

                }, { 
                    home:       '${SRC}',
                    from: [ 
                                'Makefile', 
                                'make.bat', 
                                'main.me', 
                                'package.json', 
                                'src', 
                                'doc', 
                                'projects', 
                                'package', 
                                'test' 
                    ],
                    to:     '${src}/',
                },
            ],
        }
    },
})
