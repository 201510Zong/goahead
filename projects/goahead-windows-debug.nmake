#
#   goahead-windows-debug.nmake -- Makefile to build Embedthis GoAhead for windows
#

PA        = $(PROCESSOR_ARCHITECTURE)
!IF "$(PA)" == "AMD64"
ARCH     = x64
ENTRY    = _DllMainCRTStartup
!ELSE
ARCH  = x86
ENTRY    = _DllMainCRTStartup@12
!ENDIF

OS       = windows
PROFILE  = debug
CONFIG   = $(OS)-$(ARCH)-$(PROFILE)
CC       = cl
LD       = link
RC       = rc
CFLAGS   = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS   = -D_REENTRANT -D_MT -DBIT_DEBUG
IFLAGS   = -I$(CONFIG)\inc
LDFLAGS  = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS = -libpath:$(CONFIG)\bin
LIBS     = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

all: prep \
        $(CONFIG)\bin\libgo.dll \
        $(CONFIG)\bin\goahead.exe \
        $(CONFIG)\bin\goahead-test.exe \
        $(CONFIG)\bin\gopass.exe \
        $(CONFIG)\bin\webcomp.exe \
        test\cgi-bin\cgitest.exe

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc\bit.h copy projects\goahead-$(OS)-$(PROFILE)-bit.h $(CONFIG)\inc\bit.h
clean:
	-if exist $(CONFIG)\bin\libgo.dll del /Q $(CONFIG)\bin\libgo.dll
	-if exist $(CONFIG)\bin\goahead.exe del /Q $(CONFIG)\bin\goahead.exe
	-if exist $(CONFIG)\bin\goahead-test.exe del /Q $(CONFIG)\bin\goahead-test.exe
	-if exist $(CONFIG)\bin\gopass.exe del /Q $(CONFIG)\bin\gopass.exe
	-if exist $(CONFIG)\bin\webcomp.exe del /Q $(CONFIG)\bin\webcomp.exe
	-if exist test\cgi-bin\cgitest.exe del /Q test\cgi-bin\cgitest.exe
	-if exist $(CONFIG)\obj\action.obj del /Q $(CONFIG)\obj\action.obj
	-if exist $(CONFIG)\obj\alloc.obj del /Q $(CONFIG)\obj\alloc.obj
	-if exist $(CONFIG)\obj\auth.obj del /Q $(CONFIG)\obj\auth.obj
	-if exist $(CONFIG)\obj\cgi.obj del /Q $(CONFIG)\obj\cgi.obj
	-if exist $(CONFIG)\obj\crypt.obj del /Q $(CONFIG)\obj\crypt.obj
	-if exist $(CONFIG)\obj\file.obj del /Q $(CONFIG)\obj\file.obj
	-if exist $(CONFIG)\obj\http.obj del /Q $(CONFIG)\obj\http.obj
	-if exist $(CONFIG)\obj\js.obj del /Q $(CONFIG)\obj\js.obj
	-if exist $(CONFIG)\obj\jst.obj del /Q $(CONFIG)\obj\jst.obj
	-if exist $(CONFIG)\obj\options.obj del /Q $(CONFIG)\obj\options.obj
	-if exist $(CONFIG)\obj\rom-documents.obj del /Q $(CONFIG)\obj\rom-documents.obj
	-if exist $(CONFIG)\obj\rom.obj del /Q $(CONFIG)\obj\rom.obj
	-if exist $(CONFIG)\obj\route.obj del /Q $(CONFIG)\obj\route.obj
	-if exist $(CONFIG)\obj\runtime.obj del /Q $(CONFIG)\obj\runtime.obj
	-if exist $(CONFIG)\obj\socket.obj del /Q $(CONFIG)\obj\socket.obj
	-if exist $(CONFIG)\obj\upload.obj del /Q $(CONFIG)\obj\upload.obj
	-if exist $(CONFIG)\obj\matrixssl.obj del /Q $(CONFIG)\obj\matrixssl.obj
	-if exist $(CONFIG)\obj\openssl.obj del /Q $(CONFIG)\obj\openssl.obj
	-if exist $(CONFIG)\obj\goahead.obj del /Q $(CONFIG)\obj\goahead.obj
	-if exist $(CONFIG)\obj\test.obj del /Q $(CONFIG)\obj\test.obj
	-if exist $(CONFIG)\obj\gopass.obj del /Q $(CONFIG)\obj\gopass.obj
	-if exist $(CONFIG)\obj\webcomp.obj del /Q $(CONFIG)\obj\webcomp.obj
	-if exist $(CONFIG)\obj\cgitest.obj del /Q $(CONFIG)\obj\cgitest.obj

$(CONFIG)\inc\bitos.h:  \
        $(CONFIG)\inc\bit.h
	-if exist $(CONFIG)\inc\bitos.h del /Q $(CONFIG)\inc\bitos.h
	copy /Y src\bitos.h $(CONFIG)\inc\bitos.h

$(CONFIG)\inc\goahead.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\bitos.h
	-if exist $(CONFIG)\inc\goahead.h del /Q $(CONFIG)\inc\goahead.h
	copy /Y src\goahead.h $(CONFIG)\inc\goahead.h

$(CONFIG)\inc\js.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	-if exist $(CONFIG)\inc\js.h del /Q $(CONFIG)\inc\js.h
	copy /Y src\js.h $(CONFIG)\inc\js.h

$(CONFIG)\obj\action.obj: \
        src\action.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\action.obj -Fd$(CONFIG)\obj\action.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\action.c

$(CONFIG)\obj\alloc.obj: \
        src\alloc.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\alloc.obj -Fd$(CONFIG)\obj\alloc.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\alloc.c

$(CONFIG)\obj\auth.obj: \
        src\auth.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\auth.obj -Fd$(CONFIG)\obj\auth.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\auth.c

$(CONFIG)\obj\cgi.obj: \
        src\cgi.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\cgi.obj -Fd$(CONFIG)\obj\cgi.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\cgi.c

$(CONFIG)\obj\crypt.obj: \
        src\crypt.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\crypt.obj -Fd$(CONFIG)\obj\crypt.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\crypt.c

$(CONFIG)\obj\file.obj: \
        src\file.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\file.obj -Fd$(CONFIG)\obj\file.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\file.c

$(CONFIG)\obj\http.obj: \
        src\http.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\http.c

$(CONFIG)\obj\js.obj: \
        src\js.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\js.h
	"$(CC)" -c -Fo$(CONFIG)\obj\js.obj -Fd$(CONFIG)\obj\js.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\js.c

$(CONFIG)\obj\jst.obj: \
        src\jst.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h \
        $(CONFIG)\inc\js.h
	"$(CC)" -c -Fo$(CONFIG)\obj\jst.obj -Fd$(CONFIG)\obj\jst.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\jst.c

$(CONFIG)\obj\options.obj: \
        src\options.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\options.obj -Fd$(CONFIG)\obj\options.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\options.c

$(CONFIG)\obj\rom-documents.obj: \
        src\rom-documents.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\rom-documents.obj -Fd$(CONFIG)\obj\rom-documents.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\rom-documents.c

$(CONFIG)\obj\rom.obj: \
        src\rom.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\rom.obj -Fd$(CONFIG)\obj\rom.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\rom.c

$(CONFIG)\obj\route.obj: \
        src\route.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\route.obj -Fd$(CONFIG)\obj\route.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\route.c

$(CONFIG)\obj\runtime.obj: \
        src\runtime.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\runtime.obj -Fd$(CONFIG)\obj\runtime.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\runtime.c

$(CONFIG)\obj\socket.obj: \
        src\socket.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\socket.obj -Fd$(CONFIG)\obj\socket.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\socket.c

$(CONFIG)\obj\upload.obj: \
        src\upload.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\upload.obj -Fd$(CONFIG)\obj\upload.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\upload.c

$(CONFIG)\obj\matrixssl.obj: \
        src\ssl\matrixssl.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\matrixsslApi.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\matrixssl.obj -Fd$(CONFIG)\obj\matrixssl.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\ssl\matrixssl.c

$(CONFIG)\obj\openssl.obj: \
        src\ssl\openssl.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\bitos.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\openssl.obj -Fd$(CONFIG)\obj\openssl.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\ssl\openssl.c

$(CONFIG)\bin\libgo.dll:  \
        $(CONFIG)\inc\bitos.h \
        $(CONFIG)\inc\goahead.h \
        $(CONFIG)\inc\js.h \
        $(CONFIG)\obj\action.obj \
        $(CONFIG)\obj\alloc.obj \
        $(CONFIG)\obj\auth.obj \
        $(CONFIG)\obj\cgi.obj \
        $(CONFIG)\obj\crypt.obj \
        $(CONFIG)\obj\file.obj \
        $(CONFIG)\obj\http.obj \
        $(CONFIG)\obj\js.obj \
        $(CONFIG)\obj\jst.obj \
        $(CONFIG)\obj\options.obj \
        $(CONFIG)\obj\rom-documents.obj \
        $(CONFIG)\obj\rom.obj \
        $(CONFIG)\obj\route.obj \
        $(CONFIG)\obj\runtime.obj \
        $(CONFIG)\obj\socket.obj \
        $(CONFIG)\obj\upload.obj \
        $(CONFIG)\obj\matrixssl.obj \
        $(CONFIG)\obj\openssl.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libgo.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\action.obj $(CONFIG)\obj\alloc.obj $(CONFIG)\obj\auth.obj $(CONFIG)\obj\cgi.obj $(CONFIG)\obj\crypt.obj $(CONFIG)\obj\file.obj $(CONFIG)\obj\http.obj $(CONFIG)\obj\js.obj $(CONFIG)\obj\jst.obj $(CONFIG)\obj\options.obj $(CONFIG)\obj\rom-documents.obj $(CONFIG)\obj\rom.obj $(CONFIG)\obj\route.obj $(CONFIG)\obj\runtime.obj $(CONFIG)\obj\socket.obj $(CONFIG)\obj\upload.obj $(CONFIG)\obj\matrixssl.obj $(CONFIG)\obj\openssl.obj $(LIBS)

$(CONFIG)\inc\*.h: 
	-if exist $(CONFIG)\inc\*.h del /Q $(CONFIG)\inc\*.h
	copy /Y *.h $(CONFIG)\inc\*.h

$(CONFIG)\obj\goahead.obj: \
        src\goahead.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\goahead.obj -Fd$(CONFIG)\obj\goahead.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\goahead.c

$(CONFIG)\bin\goahead.exe:  \
        $(CONFIG)\bin\libgo.dll \
        $(CONFIG)\inc\*.h \
        $(CONFIG)\obj\goahead.obj
	"$(LD)" -out:$(CONFIG)\bin\goahead.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\goahead.obj libgo.lib $(LIBS)

$(CONFIG)\obj\test.obj: \
        test\test.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h \
        $(CONFIG)\inc\js.h
	"$(CC)" -c -Fo$(CONFIG)\obj\test.obj -Fd$(CONFIG)\obj\test.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc test\test.c

$(CONFIG)\bin\goahead-test.exe:  \
        $(CONFIG)\bin\libgo.dll \
        $(CONFIG)\inc\*.h \
        $(CONFIG)\obj\test.obj
	"$(LD)" -out:$(CONFIG)\bin\goahead-test.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\test.obj libgo.lib $(LIBS)

$(CONFIG)\obj\gopass.obj: \
        utils\gopass.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\gopass.obj -Fd$(CONFIG)\obj\gopass.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc utils\gopass.c

$(CONFIG)\bin\gopass.exe:  \
        $(CONFIG)\bin\libgo.dll \
        $(CONFIG)\inc\*.h \
        $(CONFIG)\obj\gopass.obj
	"$(LD)" -out:$(CONFIG)\bin\gopass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\gopass.obj libgo.lib $(LIBS)

$(CONFIG)\obj\webcomp.obj: \
        utils\webcomp.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\goahead.h
	"$(CC)" -c -Fo$(CONFIG)\obj\webcomp.obj -Fd$(CONFIG)\obj\webcomp.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc utils\webcomp.c

$(CONFIG)\bin\webcomp.exe:  \
        $(CONFIG)\inc\*.h \
        $(CONFIG)\obj\webcomp.obj
	"$(LD)" -out:$(CONFIG)\bin\webcomp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\webcomp.obj $(LIBS)

$(CONFIG)\obj\cgitest.obj: \
        test\cgitest.c \
        $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\cgitest.obj -Fd$(CONFIG)\obj\cgitest.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc test\cgitest.c

test\cgi-bin\cgitest.exe:  \
        $(CONFIG)\inc\*.h \
        $(CONFIG)\obj\cgitest.obj
	"$(LD)" -out:test\cgi-bin\cgitest.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\cgitest.obj $(LIBS)

